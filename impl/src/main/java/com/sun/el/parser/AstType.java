/* Generated By:JJTree: Do not edit this line. AstType.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.sun.el.parser;

import javax.el.ELException;
import javax.el.ELResolver;
import javax.el.ELClass;
import javax.el.PropertyNotFoundException;

import com.sun.el.lang.EvaluationContext;
import com.sun.el.util.MessageFactory;


public
class AstType extends SimpleNode {

    public AstType(int id) {
      super(id);
    }

    /*
     * There are 3 possible results from getValue, depdending on context
     * 1. T(...)().  Return the constructor call.
     * 2. T(...).a.b.  This is a static field or method reference.  Returns
     *    a ELClass instance.  The resolution of the static field will be done
     *    in "StaticFieldELResolver
     * 3. T(...).  Return the java.lang.Class instance
     */
    @Override
    public Object getValue(EvaluationContext ctx) throws ELException {

        if (jjtGetNumChildren() > 0) {
            // Constructor call
            AstMethodArguments args = (AstMethodArguments) jjtGetChild(0);
            ELResolver resolver = ctx.getELResolver();
            Class<?>[] paramTypes = args.getParamTypes();
            Object[] params = args.getParameters(ctx);
            ctx.setPropertyResolved(false);
            return resolver.invoke(ctx, new ELClass(this.image),
                                   "<init>", paramTypes, params);
        }

        if (jjtGetParent() instanceof AstValue) {
            return new ELClass(this.image);
        }

        try {
            return Class.forName(this.image, false,
                                 getClass().getClassLoader());
        } catch (ClassNotFoundException ex) {
            throw new ELException(MessageFactory.get("error.class.notfound",
                          this.image));
        }
    }
}
/* JavaCC - OriginalChecksum=0510d01c8a77c51e12176a8bb2e62c33 (do not edit this line) */
